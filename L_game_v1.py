def init_board():
    board = [[' ' for _ in range(4)] for _ in range(4)]
    board[3][0] = 'Y'
    board[0][3] = 'X'
    for i in range (3):
        board[i][1] = '1'
    board[0][2] = '1'
    for i in range (1,4):
        board[i][2] = '2'
    board[3][1] = '2'
    return board


def update_board(board_state):
    to_move = '1'
    for i in range (4):
        for j in range (4):
            if board_state[i][j] == to_move:
                board_state[i][j] = ' '
    return board_state


def print_board(board):
    for i in range (4):
        print (board[i])


valid_moves = {
    "00,12": ((0,0),(0,1),(0,2),(1,2)),
    "10,22": ((1,0),(1,1),(1,2),(2,2)),
    "20,32": ((2,0),(2,1),(2,2),(3,2)),
    "01,13": ((0,1),(0,2),(0,3),(1,3)),
    "11,21": ((1,1),(1,2),(1,3),(2,3)),
    "21,33": ((2,1),(2,2),(2,3),(3,3)),
    "10,02": ((1,0),(1,1),(1,2),(0,2)),
    "20,12": ((2,0),(2,1),(2,2),(1,2)),
    "30,22": ((3,0),(3,1),(3,2),(2,2)),
    "11,03": ((1,1),(1,2),(1,3),(0,3)),
    "21,13": ((2,1),(2,2),(2,3),(1,3)),
    "31,23": ((3,1),(3,2),(3,3),(2,3)),
    "02,10": ((0,2),(0,1),(0,0),(1,0)),
    "12,20": ((1,2),(1,1),(1,0),(2,0)),
    "22,30": ((2,2),(2,1),(2,0),(3,0)),
    "03,11": ((0,3),(0,2),(0,1),(1,1)),
    "13,21": ((1,3),(1,2),(1,1),(2,1)),
    "23,31": ((2,3),(2,2),(2,1),(3,1)),
    "12,00": ((1,2),(1,1),(1,0),(0,0)),
    "22,10": ((2,2),(2,1),(2,0),(1,0)),
    "32,20": ((3,2),(3,1),(3,0),(2,0)),
    "13,01": ((1,3),(1,2),(1,1),(0,1)),
    "23,11": ((2,3),(2,2),(2,1),(1,1)),
    "33,21": ((3,3),(3,2),(3,1),(2,1)),
    "20,01": ((2,0),(1,0),(0,0),(0,1)),
    "21,02": ((2,1),(1,1),(0,1),(0,2)),
    "22,03": ((2,2),(1,2),(0,2),(0,3)),
    "30,11": ((3,0),(2,0),(1,0),(1,1)),
    "31,12": ((3,1),(2,1),(1,1),(1,2)),
    "32,13": ((3,2),(2,2),(1,2),(1,3)),
    "21,00": ((2,1),(1,1),(0,1),(0,0)),
    "22,01": ((2,2),(1,2),(0,2),(0,1)),
    "23,02": ((2,3),(1,3),(0,3),(0,2)),
    "31,10": ((3,1),(2,1),(1,1),(1,0)),
    "32,11": ((3,2),(2,2),(1,2),(1,1)),
    "33,12": ((3,3),(2,3),(1,3),(1,2)),
    "00,21": ((0,0),(1,0),(2,0),(2,1)),
    "01,22": ((0,1),(1,1),(2,1),(2,2)),
    "02,23": ((0,2),(1,2),(2,2),(2,3)),
    "10,31": ((1,0),(2,0),(3,0),(3,1)),
    "11,32": ((1,1),(2,1),(3,1),(3,2)),
    "12,33": ((1,2),(2,2),(3,2),(3,3)),
    "01,20": ((0,1),(1,1),(2,1),(2,0)),
    "02,21": ((0,2),(1,2),(2,2),(2,1)),
    "03,22": ((0,3),(1,3),(2,3),(2,2)),
    "11,30": ((1,1),(2,1),(3,1),(3,0)),
    "12,31": ((1,2),(2,2),(3,2),(3,1)),
    "13,32": ((1,3),(2,3),(3,3),(3,2))
}


def input_move(board_state):
    print()
    print_board(update_board(board_state))
    
    move = input('Enter your move: ')
    is_valid, move_imp = check_move(move)
    if is_valid:
        # print, continue
    else:
        # retry enter your move
        # while not is_valid?

def check_move(move):
    valid_move = valid_moves.get(move)
    if valid_move is not None:
        return (True, valid_move)
    return (False, None)


def check_move_neutral():
    pass


def valid_moves():
    pass


def main():
    board_state = init_board()
    print_board(board_state)
    input_move(board_state)






